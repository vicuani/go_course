// Use protoc --go_out=./internal/grpc/grpcapi --go_opt=paths=source_relative --go-grpc_out=./internal/grpc/grpcapi --go-grpc_opt=paths=source_relative api.proto
// to regenerate code

syntax = "proto3";

package taxi;

option go_package = "github.com/vicuani/go_course/gocourse17/grpcapi";

service TaxiService {
    rpc EvaluateCargoState(EvaluateCargoStateRequest) returns (EvaluateCargoStateResponse);
    rpc EvaluateDriverService(EvaluateDriverServiceRequest) returns (EvaluateDriverServiceResponse);
    rpc EvaluateDeliverySpeed(EvaluateDeliverySpeedRequest) returns (EvaluateDeliverySpeedResponse);
    rpc DriverReviewsHistory(DriverReviewsHistoryRequest) returns (DriverReviewsHistoryResponse);
}

enum Enum {
    Excellent = 0;
    Great = 1;
    Good = 2;
    Fair = 3;
    Poor = 4;
}

message EvaluateCargoStateRequest {
    int32 driver_id = 1;
    Enum cargo_state = 2;
}

message EvaluateDriverServiceRequest {
    int32 driver_id = 1;
    Enum driver_service = 2;
}

message EvaluateDeliverySpeedRequest {
    int32 driver_id = 1;
    Enum delivery_speed = 2;
}

message EvaluateCargoStateResponse {
    string message = 1;
}

message EvaluateDriverServiceResponse {
    string message = 1;
}

message EvaluateDeliverySpeedResponse {
    string message = 1;
}

message DriverReviewsHistoryRequest {
    int32 driver_id = 1;
}

message DriverReviewsHistoryResponse {
    repeated Enum cargo_states = 1;
    repeated Enum driver_services = 2;
    repeated Enum delivery_speeds = 3;
}
